{"version":3,"file":"static/webpack/static/development/pages/_app.js.8e7680b130291bfcc432.hot-update.js","sources":["webpack:///./components/styleguide/CodeBlock.tsx","webpack:///./pages/_app.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport {\n  LiveProvider,\n  LiveEditor,\n  LiveError,\n  LivePreview,\n  LiveProviderProps\n} from 'react-live'\nimport { mdx } from '@mdx-js/react'\n\nimport { Icon } from '../library/Icon'\nimport { prismTheme } from './prismTheme'\n\ntype ComponentProps<T> = T extends React.Component<infer U> ? U : never\n\nexport interface CodeBlockProps\n  extends Omit<ComponentProps<Highlight>, 'children'> {\n  children?: string\n  className?: string\n  live?: boolean\n  preview?: boolean\n  scope?: LiveProviderProps['scope']\n}\n\nexport const CodeBlock: React.FC<any> = ({\n  children,\n  className: cls,\n  language: lang,\n  live,\n  preview,\n  scope,\n  ...rest\n}) => {\n  const language = lang || (cls || '').replace(/language-/, '')\n  const code = children?.trim() || ''\n  const liveScope = {\n    ...scope,\n    Icon,\n    mdx\n  }\n\n  if (live) {\n    return (\n      <div className={clsx('ba b--light-gray', cls)} {...rest}>\n        <LiveProvider\n          code={code}\n          language={language}\n          scope={liveScope}\n          theme={prismTheme}\n        >\n          <LivePreview className=\"pa3 pa4-ns\" />\n          <LiveError className=\"dark-red mv0 nt4 pa3\" />\n          {/* https://github.com/satya164/react-simple-code-editor#props */}\n          <div className=\"bg-near-white pa2\">\n            <LiveEditor\n              style={{\n                fontFamily: 'Consolas, monaco, monospace',\n                fontSize: '14px',\n                lineHeight: 1.25,\n                padding: 0,\n                whiteSpace: 'pre-wrap'\n              }}\n            />\n          </div>\n        </LiveProvider>\n      </div>\n    )\n  } else if (preview) {\n    return (\n      <div className={clsx('ba b--light-gray', cls)} {...rest}>\n        <LiveProvider\n          code={code}\n          language={language}\n          scope={liveScope}\n          theme={prismTheme}\n        >\n          <LivePreview className=\"pa3 pa4-ns\" />\n          <LiveError className=\"dark-red mv0 nt4 pa3\" />\n        </LiveProvider>\n      </div>\n    )\n  }\n\n  return (\n    <Highlight\n      {...defaultProps}\n      code={code}\n      language={language}\n      theme={prismTheme}\n      {...rest}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={clsx('code f6 lh-title pa3', className, cls)}\n          style={{\n            ...style,\n            whiteSpace: 'pre-wrap'\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  )\n}\ntry {\n    // @ts-ignore\n    CodeBlock.displayName = \"CodeBlock\";\n    // @ts-ignore\n    CodeBlock.__docgenInfo = { \"description\": \"\", \"displayName\": \"CodeBlock\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"components/styleguide/CodeBlock.tsx#CodeBlock\"] = { docgenInfo: CodeBlock.__docgenInfo, name: \"CodeBlock\", path: \"components/styleguide/CodeBlock.tsx#CodeBlock\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import React from 'react'\nimport { AppProps } from 'next/app'\nimport { MDXProvider } from '@mdx-js/react'\n\nimport '../node_modules/tachyons/css/tachyons.css'\nimport '../components/library/Global.css'\n\nimport { Body } from '../components/styleguide/Body'\nimport { CodeBlock } from '../components/styleguide/CodeBlock'\nimport { Heading } from '../components/styleguide/Heading'\nimport { Link } from '../components/styleguide/Link'\nimport { List } from '../components/styleguide/List'\nimport { Root } from '../components/styleguide/Root'\n\nconst components = {\n  a: props => <Link underline {...props} />,\n  h1: props => <Heading {...props} />,\n  h2: props => <Heading variant=\"2\" {...props} />,\n  h3: props => <Heading variant=\"3\" {...props} />,\n  h4: props => <Heading variant=\"4\" {...props} />,\n  ol: props => <List as=\"ol\" {...props} />,\n  p: props => <Body {...props} />,\n  pre: props => <div {...props} />,\n  ul: props => <List {...props} />,\n  code: ({\n    children,\n    className,\n    ...rest\n  }: React.HTMLAttributes<HTMLElement>) => {\n    const language = className.replace(/language-/, '')\n\n    return (\n      <CodeBlock className=\"mv3\" language={language} {...rest}>\n        {children}\n      </CodeBlock>\n    )\n  }\n}\n\nexport default ({ Component, pageProps }: AppProps) => {\n  return (\n    <MDXProvider components={components}>\n      <Root title=\"Hello, Next.js!\">\n        <Component {...pageProps} />\n      </Root>\n    </MDXProvider>\n  )\n}\ntry {\n    // @ts-ignore\n    app.displayName = \"app\";\n    // @ts-ignore\n    app.__docgenInfo = { \"description\": \"\", \"displayName\": \"app\", \"props\": { \"pageProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pageProps\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"Component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"Component\", \"required\": true, \"type\": { \"name\": \"NextComponentType<NextPageContext, any, {}>\" } }, \"router\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"router\", \"required\": true, \"type\": { \"name\": \"Router\" } }, \"__N_SSG\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__N_SSG\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"__N_SSP\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__N_SSP\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"pages/_app.tsx#app\"] = { docgenInfo: app.__docgenInfo, name: \"app\", path: \"pages/_app.tsx#app\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAaA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AARA;AAmBA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAtBA;AAyBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}