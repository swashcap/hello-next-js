{"version":3,"file":"static/webpack/static/development/pages/_app.js.53a6babaa32cd1e4e9f0.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import React from 'react'\nimport { AppProps } from 'next/app'\nimport { MDXProvider } from '@mdx-js/react'\n\nimport '../node_modules/tachyons/css/tachyons.css'\nimport '../components/library/Global.css'\n\nimport { Body } from '../components/styleguide/Body'\nimport { CodeBlock } from '../components/styleguide/CodeBlock'\nimport { Heading } from '../components/styleguide/Heading'\nimport { Icon } from '../components/library/Icon'\nimport { Link } from '../components/styleguide/Link'\nimport { List } from '../components/styleguide/List'\nimport { Root } from '../components/styleguide/Root'\n\nconst components = {\n  a: props => <Link underline {...props} />,\n  h1: props => <Heading {...props} />,\n  h2: props => <Heading variant=\"2\" {...props} />,\n  h3: props => <Heading variant=\"3\" {...props} />,\n  h4: props => <Heading variant=\"4\" {...props} />,\n  ol: props => <List as=\"ol\" {...props} />,\n  p: props => <Body {...props} />,\n  pre: props => <div {...props} />,\n  ul: props => <List {...props} />,\n  code: ({\n    children,\n    className,\n    ...rest\n  }: React.HTMLAttributes<HTMLElement>) => {\n    const language = className.replace(/language-/, '')\n\n    return (\n      <CodeBlock className=\"mv3\" language={language} {...rest}>\n        {children}\n      </CodeBlock>\n    )\n  },\n  Icon\n}\n\nexport default ({ Component, pageProps }: AppProps) => {\n  return (\n    <MDXProvider components={components} scope={{ Icon }}>\n      <Root title=\"Hello, Next.js!\">\n        <Component {...pageProps} />\n      </Root>\n    </MDXProvider>\n  )\n}\ntry {\n    // @ts-ignore\n    app.displayName = \"app\";\n    // @ts-ignore\n    app.__docgenInfo = { \"description\": \"\", \"displayName\": \"app\", \"props\": { \"pageProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pageProps\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"Component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"Component\", \"required\": true, \"type\": { \"name\": \"NextComponentType<NextPageContext, any, {}>\" } }, \"router\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"router\", \"required\": true, \"type\": { \"name\": \"Router\" } }, \"__N_SSG\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__N_SSG\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"__N_SSP\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__N_SSP\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"pages/_app.tsx#app\"] = { docgenInfo: app.__docgenInfo, name: \"app\", path: \"pages/_app.tsx#app\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAvBA;AA0BA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}