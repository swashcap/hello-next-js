{"version":3,"file":"static/webpack/static/development/pages/_app.js.a6b77c4bc22eabf3f9b4.hot-update.js","sources":["webpack:///./components/styleguide/Grid.tsx","webpack:///./components/styleguide/List.tsx","webpack:///./components/styleguide/Root.tsx","webpack:///./pages/_app.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\n\nexport type GridProps = React.HTMLAttributes<HTMLDivElement>\n\nexport type GridColumnProps = React.HTMLAttributes<HTMLDivElement>\n\nexport class Grid extends React.Component<GridProps> {\n  static Column({ className, ...rest }: GridColumnProps) {\n    return <div className={clsx('ph3', className)} {...rest} />\n  }\n\n  render() {\n    const { className, ...rest } = this.props\n\n    return (\n      <div className={clsx('flex flex-wrap nl3 nr3', className)} {...rest} />\n    )\n  }\n}\ntry {\n    // @ts-ignore\n    Grid.displayName = \"Grid\";\n    // @ts-ignore\n    Grid.__docgenInfo = { \"description\": \"\", \"displayName\": \"Grid\", \"props\": {} };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"components/styleguide/Grid.tsx#Grid\"] = { docgenInfo: Grid.__docgenInfo, name: \"Grid\", path: \"components/styleguide/Grid.tsx#Grid\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import React from 'react'\nimport clsx from 'clsx'\n\nexport type ListElement = 'ol' | 'ul'\n\ntype GetHTMLAttributes<T> = T extends React.DetailedHTMLProps<infer U, any>\n  ? U\n  : never\n\nexport type ListProps<T extends ListElement> = GetHTMLAttributes<\n  JSX.IntrinsicElements[T]\n> & {\n  as?: T\n}\n\nexport const List = <T extends ListElement = 'ul'>({\n  as: asProp,\n  className,\n  ...rest\n}: ListProps<T>) => {\n  const Component = asProp || 'ul'\n\n  return <Component className={clsx('mv3 pl2', className)} {...rest} />\n}\ntry {\n    // @ts-ignore\n    List.displayName = \"List\";\n    // @ts-ignore\n    List.__docgenInfo = { \"description\": \"\", \"displayName\": \"List\", \"props\": { \"as\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"as\", \"required\": false, \"type\": { \"name\": \"T\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"components/styleguide/List.tsx#List\"] = { docgenInfo: List.__docgenInfo, name: \"List\", path: \"components/styleguide/List.tsx#List\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import Head from 'next/head'\nimport React from 'react'\nimport clsx from 'clsx'\nimport { useRouter } from 'next/router'\n\nimport { Divider } from './Divider'\nimport { Footer } from './Footer'\nimport { FullPageLayout } from './layouts/FullPageLayout'\nimport { Link } from './Link'\nimport { Nav } from './Nav'\nimport { SearchForm } from './SearchForm'\nimport { SidebarLayout } from './layouts/SidebarLayout'\nimport { VisuallyHidden } from '../library/VisuallyHidden'\nimport { Grid } from './Grid'\n\nconst assetPrefix = (process.env.assetPrefix || '').replace(/\\/$/, '')\n\nexport interface RootProps extends React.HTMLAttributes<HTMLDivElement> {\n  description?: string\n  title: string\n}\n\nexport const Root: React.FC<RootProps> = ({\n  className,\n  children,\n  description,\n  title,\n  ...rest\n}) => {\n  const { pathname } = useRouter()\n\n  return (\n    <div\n      className={clsx('flex flex-column', className)}\n      style={{ minHeight: '100vh' }}\n      {...rest}\n    >\n      <VisuallyHidden as=\"a\" focusable href=\"#content\">\n        Skip to content\n      </VisuallyHidden>\n      <Head>\n        <link rel=\"icon\" href={`${assetPrefix}/favicon.ico`} />\n        <title>{title}</title>\n        {!!description && <meta name=\"description\" content={description} />}\n      </Head>\n      <header\n        className=\"bb b--silver pb3 pb0-m pb0-l items-center\"\n        role=\"banner\"\n      >\n        <Grid className=\"items-center\">\n          <Grid.Column className=\"w-100 w-70-l\">\n            <Link className=\"fw7 pv3\" href=\"/\">\n              Hello, Next.js!\n            </Link>\n            <Nav\n              className=\"inline-flex pl3\"\n              inline\n              links={[\n                {\n                  href: `${assetPrefix}/components/`,\n                  name: 'Components'\n                }\n              ]}\n            />\n          </Grid.Column>\n          <Grid.Column className=\"w-100 w-30-l\">\n            <SearchForm\n              onSubmit={event => {\n                event.preventDefault()\n              }}\n            />\n          </Grid.Column>\n        </Grid>\n      </header>\n      <main style={{ flex: 2 }}>\n        {pathname.includes('components') ? (\n          <SidebarLayout\n            sidebar={\n              <>\n                <Nav\n                  className=\"mb2 mt3\"\n                  links={[\n                    {\n                      href: `${assetPrefix}/components/`,\n                      name: 'Getting Started'\n                    }\n                  ]}\n                />\n                <Divider className=\"mv2\" />\n                <Nav\n                  className=\"mv2\"\n                  links={[\n                    {\n                      href: `${assetPrefix}/components/Alert/`,\n                      name: 'Alert'\n                    },\n                    {\n                      href: `${assetPrefix}/components/Breadcrumb/`,\n                      name: 'Breadcrumb'\n                    },\n                    {\n                      href: `${assetPrefix}/components/Button/`,\n                      name: 'Button'\n                    },\n                    {\n                      href: `${assetPrefix}/components/Card/`,\n                      name: 'Card'\n                    }\n                  ]}\n                />\n                <Divider className=\"mv2\" />\n                <Nav\n                  className=\"mv2\"\n                  links={[\n                    {\n                      href: `${assetPrefix}/components/utilities/`,\n                      name: 'Utilities'\n                    }\n                  ]}\n                />\n              </>\n            }\n          >\n            <article className=\"mb4 mt3\" id=\"content\">\n              {children}\n            </article>\n          </SidebarLayout>\n        ) : (\n          <FullPageLayout id=\"content\">{children}</FullPageLayout>\n        )}\n      </main>\n      <Footer />\n    </div>\n  )\n}\ntry {\n    // @ts-ignore\n    Root.displayName = \"Root\";\n    // @ts-ignore\n    Root.__docgenInfo = { \"description\": \"\", \"displayName\": \"Root\", \"props\": { \"description\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"description\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"title\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"title\", \"required\": true, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"components/styleguide/Root.tsx#Root\"] = { docgenInfo: Root.__docgenInfo, name: \"Root\", path: \"components/styleguide/Root.tsx#Root\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import React from 'react'\nimport { AppProps } from 'next/app'\nimport { MDXProvider } from '@mdx-js/react'\n\nimport '../node_modules/tachyons/css/tachyons.css'\nimport '../components/library/Global.css'\n\nimport { Body } from '../components/styleguide/Body'\nimport { CodeBlock } from '../components/styleguide/CodeBlock'\nimport { Heading } from '../components/styleguide/Heading'\nimport { Link } from '../components/styleguide/Link'\nimport { List } from '../components/styleguide/List'\nimport { Root } from '../components/styleguide/Root'\n\nconst components = {\n  a: props => <Link underline {...props} />,\n  h1: props => <Heading {...props} />,\n  h2: props => <Heading variant=\"2\" {...props} />,\n  h3: props => <Heading variant=\"3\" {...props} />,\n  h4: props => <Heading variant=\"4\" {...props} />,\n  ol: props => <List as=\"ol\" {...props} />,\n  p: props => <Body {...props} />,\n  pre: props => <div {...props} />,\n  ul: props => <List {...props} />,\n  code: ({\n    children,\n    className,\n    ...rest\n  }: React.HTMLAttributes<HTMLElement>) => {\n    const language = className.replace(/language-/, '')\n\n    return (\n      <CodeBlock className=\"mv3\" language={language} {...rest}>\n        {children}\n      </CodeBlock>\n    )\n  }\n}\n\nexport default ({ Component, pageProps }: AppProps) => {\n  return (\n    <MDXProvider components={components}>\n      <Root title=\"Hello, Next.js!\">\n        <Component {...pageProps} />\n      </Root>\n    </MDXProvider>\n  )\n}\ntry {\n    // @ts-ignore\n    app.displayName = \"app\";\n    // @ts-ignore\n    app.__docgenInfo = { \"description\": \"\", \"displayName\": \"app\", \"props\": { \"pageProps\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"pageProps\", \"required\": true, \"type\": { \"name\": \"any\" } }, \"Component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"Component\", \"required\": true, \"type\": { \"name\": \"NextComponentType<NextPageContext, any, {}>\" } }, \"router\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"router\", \"required\": true, \"type\": { \"name\": \"Router\" } }, \"__N_SSG\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__N_SSG\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"__N_SSP\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"__N_SSP\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"pages/_app.tsx#app\"] = { docgenInfo: app.__docgenInfo, name: \"app\", path: \"pages/_app.tsx#app\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"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","sourceRoot":""}