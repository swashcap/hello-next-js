{"version":3,"file":"static/webpack/static/development/pages/components/Breadcrumb.js.f9bd0df7fdf0c5b66aa2.hot-update.js","sources":["webpack:///./pages/components/Breadcrumb.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport {Breadcrumb} from '../../components/library/Breadcrumb'\nimport {CodeBlock} from '../../components/styleguide/CodeBlock'\nimport {Grid} from '../../components/styleguide/Grid'\nimport {MethodsTable} from '../../components/styleguide/component/MethodsTable'\nimport {PropsTable} from '../../components/styleguide/component/PropsTable'\nimport {TableOfContents} from '../../components/styleguide/component/TableOfContents'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Breadcrumb`}</h1>\n    <Grid mdxType=\"Grid\">\n  <Grid.Column className=\"w-100 w-75-l\">\n    <p className=\"f4\">\n      Give users context to their current location in a hierarchical navigation system with Breadcrumb.\n    </p>\n    <p>\n      The breadcrumb provides awareness in deeply nested page structures or views, and permits users to move freely up the structure, promoting discovery.\n    </p>\n    <CodeBlock language=\"tsx\" preview scope={{\n          Breadcrumb\n        }} mdxType=\"CodeBlock\">\n  {`<Breadcrumb>\n  <Breadcrumb.Item href=\"/music\">Music</Breadcrumb.Item>\n  <Breadcrumb.Item href=\"/music/hip-hop\">Hip Hop</Breadcrumb.Item>\n  <Breadcrumb.Item active>Wu-Tang Clan</Breadcrumb.Item>\n</Breadcrumb>`}\n      </CodeBlock>\n  </Grid.Column>\n  <Grid.Column className=\"w-100 w-25-l\">\n    <TableOfContents items={[['Usage'], ['Accessibility'], ['Component API', ['Props', 'Methods']]]} mdxType=\"TableOfContents\" />\n  </Grid.Column>\n    </Grid>\n    <h4>{`Related`}</h4>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#\"\n        }}>{`Navigation design guidelines ↗`}</a></li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <p>{`Import the `}<inlineCode parentName=\"p\">{`Breadcrumb`}</inlineCode>{` component into a React component in your project:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import {Breadcrumb} from 'hello-next-js'\n`}</code></pre>\n    <p>{`The root `}<inlineCode parentName=\"p\">{`Breadcrumb`}</inlineCode>{` is a styling wrapper for the breadcrumb's items, exposed through the `}<inlineCode parentName=\"p\">{`Breadcrumb.Item`}</inlineCode>{` component. Compose these in a React component in your project to form a breadcrumb:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react'\nimport {Breadcrumb} from 'hello-next-js'\n\nexport const MyComponent: React.FC<any> = () => {\n  return (\n    <Breadcrumb>\n      <Breadcrumb.Item href=\"/music\">Music</Breadcrumb.Item>\n      <Breadcrumb.Item href=\"/music/hip-hop\">Hip Hop</Breadcrumb.Item>\n      <Breadcrumb.Item active>Wu-Tang Clan</Breadcrumb.Item>\n    </Breadcrumb>\n  )\n}\n`}</code></pre>\n    <h2>{`Accessibility`}</h2>\n    <p>{`Ensure that `}<inlineCode parentName=\"p\">{`Breadcrumb.Item`}</inlineCode>{`s have the appropriate `}<inlineCode parentName=\"p\">{`href`}</inlineCode>{` property to ensure the links are accessible:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`<Breadcrumb.Item href=\"/path/to/sub-page\">Sub Page</Breadcrumb.Item>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Breadcrumb`}</inlineCode>{` component applies `}<inlineCode parentName=\"p\">{`aria-current=\"page\"`}</inlineCode>{` to a `}<inlineCode parentName=\"p\">{`Breadcrumb.Item`}</inlineCode>{` with an `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` property.`}</p>\n    <h4>{`Related`}</h4>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.w3.org/TR/wai-aria-1.1/#aria-current\"\n        }}>{`WAI-ARIA 1.1 `}<inlineCode parentName=\"a\">{`aria-current`}</inlineCode>{` spec ↗`}</a></li>\n    </ul>\n    <h2>{`Component API`}</h2>\n    <h3>{`Props`}</h3>\n    <PropsTable component={Breadcrumb} mdxType=\"PropsTable\" />\n    <h3>{`Methods`}</h3>\n    <MethodsTable component={Breadcrumb} mdxType=\"MethodsTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAesourceRoot":""}