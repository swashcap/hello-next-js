{"version":3,"file":"static/webpack/static/development/pages/components/Alert.js.6435de5b580fbe2eced9.hot-update.js","sources":["webpack:///./components/styleguide/component/PropsTable.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { ComponentDoc } from 'react-docgen-typescript'\n\nimport { Code } from '../Code'\nimport { Empty } from '../Empty'\n\nexport interface PropsTableProps\n  extends React.HTMLAttributes<HTMLTableElement> {\n  component?: React.ComponentType<any> & {\n    __docgenInfo?: ComponentDoc\n  }\n}\n\n/**\n * Props table.\n *\n * Display a React component's properties and related metadata in a table.\n */\nexport const PropsTable: React.FC<PropsTableProps> = ({\n  className,\n  component,\n  ...rest\n}) => {\n  if (\n    !component?.__docgenInfo ||\n    !Object.keys(component.__docgenInfo.props).length\n  ) {\n    return <Empty>No props found</Empty>\n  }\n\n  const {\n    __docgenInfo: { props }\n  } = component\n\n  return (\n    <table className={clsx('collapse overflow-scroll w-100', className)} {...rest}>\n      <thead className=\"bg-near-white tl v-top\">\n        <tr>\n          <th className=\"pa2\">Name</th>\n          <th className=\"pa2\">Type</th>\n          <th className=\"pa2\">Default</th>\n          <th className=\"pa2\">Description</th>\n          <th className=\"pa2\">Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.keys(props).map(key => {\n          const { defaultValue, description, name, required, type } = props[key]\n\n          return (\n            <tr className=\"bb b--silver v-top\" key={key}>\n              <td className=\"pa2\">\n                <Code>{name}</Code>\n              </td>\n              <td className=\"pa2\">\n                <Code>\n                  {type.name} {type.raw}\n                </Code>\n              </td>\n              <td className=\"pa2\">\n                {!!defaultValue?.value && <Code>{defaultValue.value}</Code>}\n              </td>\n              <td className=\"pa2\">{description}</td>\n              <td className=\"pa2\">{required ? 'Required' : ''}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\ntry {\n    // @ts-ignore\n    PropsTable.displayName = \"PropsTable\";\n    // @ts-ignore\n    PropsTable.__docgenInfo = { \"description\": \"Props table.\\n\\nDisplay a React component's properties and related metadata in a table.\", \"displayName\": \"PropsTable\", \"props\": { \"component\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"component\", \"required\": false, \"type\": { \"name\": \"(ComponentClass<any, any> & { __docgenInfo?: ComponentDoc; }) | (FunctionComponent<any> & { __docgenInfo?: ComponentDoc; })\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"components/styleguide/component/PropsTable.tsx#PropsTable\"] = { docgenInfo: PropsTable.__docgenInfo, name: \"PropsTable\", path: \"components/styleguide/component/PropsTable.tsx#PropsTable\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AAQA;;;;;AAKA;AAIA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}